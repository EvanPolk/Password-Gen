import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GUI implements ActionListener {
    private final JFrame frame = new JFrame();
    private final JPanel panel = new JPanel();
    private final JTextField passwordField = new JTextField("Press \"Generate\" to create a new password!");
    private final JButton button = new JButton("Generate");
    private final JCheckBox upperCase = new JCheckBox("Uppercase");
    private final JCheckBox lowerCase = new JCheckBox("Lowercase");
    private final JCheckBox numbers = new JCheckBox("Numbers");
    private final JCheckBox symbols = new JCheckBox("Symbols");
    private final JLabel lengthLabel = new JLabel("Length");
    private final SpinnerNumberModel possibleLengths = new SpinnerNumberModel(12, 1, 100, 1);
    private final JSpinner lengthField = new JSpinner(possibleLengths);

    // Constructor which just calls the prepare GUI function so that the GUI loads on start of main
    // precondition : none
    // postcondition : none
    public GUI() {
        prepareGUI();
    }

    // Prepares the JFrame and calls preparePanel
    // pre-condition : GUI object made in main
    // post-condition : none
    private void prepareGUI() {
        preparePanel();

        // exit operations
        frame.add(panel, BorderLayout.CENTER);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setTitle("Password Generator");
        frame.setSize(new Dimension(400, 400));
        frame.pack();
        frame.setVisible(true);
    }

    // adding every element to panel that was declared at the beginning of the class
    // also sets some values to reasonable defaults (all checkboxes checked, length set to 12)
    // pre-condition : pretty much just the existence of all JObject Variables
    // post-condition : void function just sets up front end GUI
    private void preparePanel() {
        // initializing GUI
        panel.setBorder(BorderFactory.createEmptyBorder(30, 30, 10, 30));
        GridLayout layout = new GridLayout(0, 2);
        panel.setLayout(layout);
        panel.add(passwordField);
        panel.add(button);
        button.addActionListener(this);
        panel.add(upperCase);
        panel.add(lowerCase);
        panel.add(numbers);
        panel.add(symbols);
        upperCase.setSelected(true);
        lowerCase.setSelected(true);
        numbers.setSelected(true);
        symbols.setSelected(true);
        panel.add(lengthLabel);
        panel.add(lengthField);
    }

    // listens for GenerateButton click, then executes backend and sets the returned password string in
    // the text field
    // pre-condition : GUI existence, at least one checkbox checked
    // post-condition : calls backend and sets label to password generated by backend
    @Override // this class exists within java.swift or awt, just makes sure mine is called over the built-in class
    public void actionPerformed(ActionEvent e) {
        boolean upperCaseCheck = upperCase.isSelected();
        boolean lowerCaseCheck = lowerCase.isSelected();
        boolean symbolsCheck = symbols.isSelected();
        boolean numbersCheck = numbers.isSelected();
        int length = (Integer) lengthField.getValue();
        if (!upperCaseCheck && !lowerCaseCheck && !symbolsCheck && !numbersCheck) {
            passwordField.setText("Please Check at least 1 box!");
            return;
        }
        passwordField.setText(Main.backend(upperCaseCheck, lowerCaseCheck, numbersCheck,
                    symbolsCheck, length));
    }
}
